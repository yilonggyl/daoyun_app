{"version":3,"sources":["webpack:///./node_modules/angular2-uuid/index.js","webpack:///./src/app/services/product.service.ts"],"names":[],"mappings":"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","file":"pages-add-product-add-product-module~pages-in-out-stock-in-out-stock-module~pages-product-desc-produ~6ec74f10.js","sourcesContent":["\"use strict\";\nvar UUID = (function () {\n    function UUID() {\n        // no-op\n    }\n    UUID.UUID = function () {\n        if (typeof (window) !== \"undefined\" && typeof (window.crypto) !== \"undefined\" && typeof (window.crypto.getRandomValues) !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            var buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\n        }\n        else {\n            // Otherwise, just use Math.random\n            // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n            // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n            return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" +\n                this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n        }\n    };\n    UUID.pad4 = function (num) {\n        var ret = num.toString(16);\n        while (ret.length < 4) {\n            ret = \"0\" + ret;\n        }\n        return ret;\n    };\n    UUID.random4 = function () {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    };\n    return UUID;\n}());\nexports.UUID = UUID;\n//# sourceMappingURL=index.js.map","import { Injectable } from '@angular/core';\nimport {AjaxResult} from '../shared/ajax-result';\nimport {Product} from '../shared/product';\nimport {UUID} from 'angular2-uuid';\nimport {LocalStorageService} from './local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n  async insert(input: Product): Promise<AjaxResult> {\n      input.id = UUID.UUID();\n      let pro = this.localStorageService.get('product', []);\n      pro.push(input);\n      this.localStorageService.set('product', pro);\n      return {\n          targetUrl: '',\n          result: '',\n          success: true,\n          error: null,\n          unAuthorizedRequest: false\n      };\n  }\n\n  async getList(index: number, size: number): Promise<AjaxResult> {\n      if (index < 0) {\n          // 实际开发中应抛出异常类对象\n          throw new Error('分页的索引应大于等于零');\n      }\n      if (size <= 0) {\n          // 实际开发中应抛出异常类对象\n          throw new Error('每页显示的记录数应大于零');\n      }\n      let pro = this.localStorageService.get('product', []);\n      let total = pro.length;\n      pro = pro.slice((index - 1) * size, index * size);\n      let res = {\n          totalCount: total,\n          product: pro\n      };\n      return {\n          targetUrl: '',\n          result: res,\n          success: true,\n          error: null,\n          unAuthorizedRequest: false\n      };\n  }\n  async getListByCategoryId(index: number, size: number, categoryId: number): Promise<AjaxResult> {\n      let pro = this.localStorageService.get('product', []);\n      let p = [];\n      for (let x of pro) {\n          if (x.categoryId == categoryId) {\n              p.push(x);\n          }\n      }\n      let total = p.length;\n      p = p.slice((index - 1) * size, index * size);\n      let res = {\n          totalCount: total,\n          product: p\n      };\n      return {\n          targetUrl: '',\n          result: res,\n          success: true,\n          error: null,\n          unAuthorizedRequest: false\n      };\n  }\n  async getProductById(id : string): Promise<AjaxResult> {\n      let pro = this.localStorageService.get('product', []);\n      for (let x of pro) {\n          if (x.id == id) {\n              return {\n                  targetUrl: '',\n                  result: x,\n                  success: true,\n                  error: null,\n                  unAuthorizedRequest: false\n              };\n          }\n      }\n      return {\n          targetUrl: '',\n          result: '',\n          success: false,\n          error: null,\n          unAuthorizedRequest: false\n      };\n  }\n  async getListByCondition(searchProductInput) {\n\n  }\n  delete(id: string): boolean {\n      let pro =  this.localStorageService.get('product', []);\n      for (let i = 0; i < pro.length; i++) {\n          if ( pro[i].id == id) {\n              pro.splice(i, 1);\n              this.localStorageService.set('product', pro);\n              return true;\n          }\n      }\n      return false;\n  }\n  update(product: Product): boolean {\n      let pro =  this.localStorageService.get('product', []);\n      for (let i = 0; i < pro.length; i++) {\n          if ( pro[i].id == product.id) {\n              pro[i] = product;\n              this.localStorageService.set('product', pro);\n              return true;\n          }\n      }\n      return false;\n  }\n}\n"],"sourceRoot":""}