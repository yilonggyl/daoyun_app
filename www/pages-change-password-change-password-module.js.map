{"version":3,"sources":["webpack:///./src/app/pages/change-password/change-password.module.ts","webpack:///./src/app/pages/change-password/change-password.page.html","webpack:///./src/app/pages/change-password/change-password.page.scss","webpack:///./src/app/pages/change-password/change-password.page.ts","webpack:///./src/app/services/user.service.ts"],"names":[],"mappings":"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","file":"pages-change-password-change-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChangePasswordPage } from './change-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangePasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ChangePasswordPage]\n})\nexport class ChangePasswordPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"light\\\" (click)=\\\"back()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>返回\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>修改密码</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form (ngSubmit)=\\\"onChangePwd()\\\" #changePwdForm=\\\"ngForm\\\" novalidate>\\n    <ion-list>\\n      <ion-item>\\n        <ion-text>请输入旧密码</ion-text>\\n      </ion-item>\\n      <ion-item>\\n        <ion-input name=\\\"oldPwd\\\" type=\\\"password\\\" required [(ngModel)]=\\\"pwd.old\\\" #oldPwd=\\\"ngModel\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-text>请输入新密码</ion-text>\\n      </ion-item>\\n      <ion-item>\\n        <ion-input name=\\\"newPwd\\\" type=\\\"password\\\" required [(ngModel)]=\\\"pwd.new\\\" #newPwd=\\\"ngModel\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-text>请再输入一次</ion-text>\\n      </ion-item>\\n      <ion-item>\\n        <ion-input name=\\\"cNewPwd\\\" type=\\\"password\\\" required [(ngModel)]=\\\"pwd.cNew\\\" #cNewPwd=\\\"ngModel\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-text text-left color=\\\"danger\\\" *ngIf=\\\"changePwdForm.submitted\\\">\\n        <p [hidden]=\\\"newPwd!=cNewPwd\\\" padding-start>两次输入的密码不一致。</p>\\n        <p [hidden]=\\\"oldIsRight\\\" padding-start>您输入的旧密码不正确。</p>\\n      </ion-text>\\n      <div padding-horizontal>\\n        <ion-button type=\\\"submit\\\" expand=\\\"full\\\" color=\\\"primary\\\" [disabled]=\\\"changePwdForm.invalid\\\">下一步</ion-button>\\n      </div>\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {LocalStorageService} from '../../services/local-storage.service';\nimport {UserService} from '../../services/user.service';\nimport {Router} from '@angular/router';\nimport {AlertController} from '@ionic/angular';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n  pwd = {\n    old: '',\n    new: '',\n    cNew: ''\n  };\n  oldIsRight = true;\n  constructor(private localStorageService: LocalStorageService, private userService: UserService,\n              private router: Router, private alertController: AlertController, private location: Location) { }\n\n  ngOnInit() {\n  }\n  async onChangePwd() {\n    let login = this.localStorageService.get('login', null);\n    if (login.accounts.passwordToken == this.pwd.old) {\n      this.userService.update(login.phone, this.pwd.new);\n      login.accounts.passwordToken = this.pwd.new;\n      this.localStorageService.set('login', login);\n      this.router.navigateByUrl('setting');\n        let alert =await this.alertController.create({\n            header: '提示',\n            message: '密码修改成功',\n            buttons: ['确定']\n        });\n        alert.present();\n    } else {\n        this.oldIsRight = false;\n    }\n  }\n  back() {\n    this.location.back();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {AjaxResult} from '../shared/ajax-result';\nimport {Register} from '../shared/register';\nimport {LocalStorageService} from './local-storage.service';\nimport {Events} from '@ionic/angular';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private localStorageService: LocalStorageService, public events: Events, private http: HttpClient) { }\n\n  signup(register: Register): Promise<AjaxResult> {\n    return new Promise(((resolve, reject) => {\n      // resolve\n    }));\n  }\n  async signup1(register: Register) {\n    let user = {\n      shopName: register.shopName,\n      phone: register.phone,\n      email: register.email,\n      accounts: {phone: register.phone, passwordToken: register.password},\n      registerDate: new Date().toISOString().replace(/T/g, ' ').replace(/\\.[\\d]{3}Z/, ''),\n      shortName: '',\n      owner: '',\n      shopPhone: '',\n      businessType: ''\n    };\n    let u = this.localStorageService.get('user', []);\n    u.push(user);\n    this.localStorageService.set('user', u);\n  }\n  login(username: string, password: string): boolean {\n      let url = 'http://114.115.155.218:8080/login/account';\n      this.http.post(url, {\n          'userName': username,\n          'password': password\n      }).toPromise().then(response => {\n          let res = response;\n          console.log(res);\n      });\n      let user = this.localStorageService.get('user', null);\n      console.log(user);\n      if (user != null) {\n          for (let u of user) {\n            if (u.accounts.phone == username && u.accounts.passwordToken == password) {\n                this.localStorageService.set('login', u);\n                this.events.publish('user:created',u, Date.now());\n                return true;\n            }\n          }\n      }\n      return false;\n  }\n  // 修改密码\n  update(phone: string, password: string): boolean {\n      let user = this.localStorageService.get('user', null);\n      if ( user != null ) {\n          for (let u of user) {\n              if (u.phone == phone) {\n                  u.accounts.passwordToken = password;\n                  break;\n              }\n          }\n          this.localStorageService.set('user', user);\n          return true;\n      }\n      return false;\n  }\n  // 判断手机号是否已经存在\n  check(phone: string): boolean {\n      let user = this.localStorageService.get('user', null);\n      if (user != null) {\n          for (let u of user) {\n              if (u.phone == phone) {\n                  return true;\n              }\n          }\n      }\n      return false;\n  }\n}\n"],"sourceRoot":""}